* tbot2
see tetrominobot; this is hopefully the bugless version. tell people to use the pwn binary for
practice, but the one running on the server has been changed for this challenge, and no funny
business is allowed for this one anyway. i'll try to make this one as secure as
possible. suggestions are welcome.

note we still want to run with the same libc since the rand() piece generator is deterministic with
the input, and this allows people to test locally using the pwn binary

Going with 30k iterations for now. How many points for a flag? 8k?

30k cycles * (1 piece dropped per ~30 cycles) * (4 cells per piece dropped) * (1 line cleared per
10 cells) * (100 point mimimum per line cleared) = ~40k points estimated possible

* tetrominobot

** details
The program allows the player to create little tetris bots. minus pwn, the intention would be to get
the highest-scoring bot. This would make for a fun misc or koth chall if there's time.

The player gets:
1. a binary
2. a player manual
3. an example program that clears a few lines and dies

** Language
The language is meant to be simple; basically a block of C-like code that is run in a loop. In this
code, you have access to:
- a set of predefined variables
- a set of predefined game functions
- if statements
- a small chunk of memory for counters or whatever the player wants
- maybe macros if I have the time

There won't be loops beyond the outer loop, but workarounds using counters are possible.

todo add grammar

** flag
- maple{?}


* building

~make handouts~ should build a correct docker image and run ~make~ there.
